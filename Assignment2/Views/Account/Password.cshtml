@model Assignment2.ViewModels.PasswordViewModel
@{
    ViewBag.Title = "Password";
}

<h2>Password</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Visitor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.BirthYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Passwords, htmlAttributes: new { @class = "control-label col-md-2" })
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = ViewBag.Password1,
                    Value = ViewBag.Password1,
                });
                listItems.Add(new SelectListItem
                {
                    Text = ViewBag.Password2,
                    Value = ViewBag.Password2,
                    //Selected = true
                });
                listItems.Add(new SelectListItem
                {
                    Text = ViewBag.Password3,
                    Value = ViewBag.Password3,
                });
                listItems.Add(new SelectListItem
                {
                    Text = ViewBag.Password4,
                    Value = ViewBag.Password4,
                });
                listItems.Add(new SelectListItem
                {
                    Text = ViewBag.Password5,
                    Value = ViewBag.Password5,
                });
            }

            @Html.DropDownListFor(model => model.Passwords, listItems, "-- Select Status --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Passwords, "", new { @class = "text-danger" })
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Login" class="btn btn-default" />
            </div>
        </div>
    </div>

    <p>stuff: @ViewBag.FN</p>
}

<div>
    @Html.ActionLink("To Password", "Password")
</div>

<div>
    @Html.ActionLink("Back to Login", "Login")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}